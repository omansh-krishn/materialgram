name: Linux

on:
  push:
    tags:
      - '*'
  workflow_dispatch:
    inputs:
      pkgrel:
        description: pkgrel
        type: number
        required: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:

      - name: Pull docker image
        run: |
          sudo apt update
          curl -sSL https://install.python-poetry.org | python3 -
          cd Telegram/build/docker/centos_env
          poetry install
          DOCKERFILE=$(DEBUG= LTO= poetry run gen_dockerfile)
          echo "$DOCKERFILE" > Dockerfile

      - name: Free up some disk space.
        uses: jlumbroso/free-disk-space@54081f138730dfa15788a46383842cd2f914a1be
        with:
          tool-cache: true

      - name: Set up Docker Buildx.
        uses: docker/setup-buildx-action@v3

      - name: Libraries.
        uses: docker/build-push-action@v6
        with:
          context: Telegram/build/docker/centos_env
          load: ${{ env.ONLY_CACHE == 'false' }}
          tags: ${{ env.IMAGE_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Set tag name
        run: |
          echo "TAGNAME=$(curl -s "${{ github.api_url }}/repos/${{ github.repository }}/tags" | jq -r '.[0].name')" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Build materialgram
        run: |

          DEFINE=""
          if [ -n "${{ matrix.defines }}" ]; then
            DEFINE="-D ${{ matrix.defines }}=ON"
            echo Define from matrix: $DEFINE
            echo "ARTIFACT_NAME=materialgram_${{ matrix.defines }}" >> $GITHUB_ENV
          else
            echo "ARTIFACT_NAME=materialgram" >> $GITHUB_ENV
          fi

          docker run --rm \
          -u $(id -u):$(id -g) \
          -v $PWD:/usr/src/tdesktop \
          -e CONFIG=Release \
          materialgram:build \
          /usr/src/tdesktop/Telegram/build/docker/centos_env/build.sh \
          -D CMAKE_EXE_LINKER_FLAGS="-s" \
          -D TDESKTOP_API_ID=${{ secrets.API_ID }} \
          -D TDESKTOP_API_HASH=${{ secrets.API_HASH }} \
          -D CMAKE_INTERPROCEDURAL_OPTIMIZATION=ON \
          $DEFINE

      - name: Create Tar
        run: |
          cd arch
          bash setup.sh
          tar -czvf materialgram-${{ env.TAGNAME }}.tar.gz usr

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: materialgram-${{ env.TAGNAME }}
          path: arch/materialgram-${{ env.TAGNAME }}.tar.gz

      - name: Upload artifact to Release
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ env.TAGNAME }}
          tag_name: ${{ env.TAGNAME }}
          token: ${{ secrets.PAT }}
          files: arch/materialgram-${{ env.TAGNAME }}.tar.gz

  trigger-workflow:
    runs-on: ubuntu-latest
    needs: build
    steps:
     
      - name: Set PKGREL & TAGNAME
        run: |
          if [ "${{ github.event_name }}" == 'workflow_dispatch' ]; then
            PKGREL="${{ github.event.inputs.pkgrel }}"
          else
            PKGREL="1"
          fi
          echo "PKGREL=$PKGREL" >> $GITHUB_ENV
          echo "TAGNAME=$(curl -s "${{ github.api_url }}/repos/${{ github.repository }}/tags" | jq -r '.[0].name')" >> $GITHUB_ENV

      - name: Trigger repository dispatch event
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.OKsPAT }}
          repository: materialgram/materialgram-bin
          event-type: new-release
          client-payload: '{"tagname": "${{ env.TAGNAME }}", "pkgrel": "${{ env.PKGREL }}"}'

